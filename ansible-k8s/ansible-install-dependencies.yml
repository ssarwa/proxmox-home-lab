- hosts: all # run on the "all" hosts category from ansible-hosts.txt
  # become means be superuser
  become: true
  remote_user: "{{ user }}"

  vars_files:
    - ansible-vars.yml

  tasks:
    - name: Install packages that allow apt to be used over HTTPS
      apt:
        name: "{{ packages }}"
        state: present
        update_cache: yes
      vars:
        packages:
          - apt-transport-https
          - ca-certificates
          - curl
          - gnupg-agent
          - software-properties-common
    
    - name: Download and install Docker GPG key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present
        keyring: /etc/apt/trusted.gpg.d/docker-archive-keyring.gpg

    - name: Add Docker APT repository
      apt_repository:
        repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable
        state: present
        filename: docker

    - name: Update APT package cache
      apt:
        update_cache: yes

    - name: install Containerd
      apt:
        name: containerd.io
        state: present
        update_cache: true
      register: result
      until: result is succeeded
      retries: 10
      delay: 10

    - name: Wait for containerd to start
      command: containerd --version
      register: containerd_status
      retries: 10
      delay: 5
      until: containerd_status.rc == 0

    - name: Generate containerd configuration
      shell: containerd config default | sudo tee /etc/containerd/config.toml

    - name: Update SystemdCgroup in containerd configuration
      lineinfile:
        path: /etc/containerd/config.toml
        regexp: 'SystemdCgroup \= false'
        line: 'SystemdCgroup = true'

    - name: Comment out disabled_plugins in containerd config
      lineinfile:
        path: /etc/containerd/config.toml
        regexp: '^(disabled_plugins =)'
        line: '# disabled_plugins = ["cri"]'

    - name: Restart containerd service
      systemd:
        name: containerd
        state: restarted
        enabled: yes

    - name: Download the Google Cloud public signing key
      apt_key:
        url: https://dl.k8s.io/apt/doc/apt-key.gpg
        state: present
        #keyring: /etc/apt/keyrings/kubernetes-archive-keyring.gpg

    - name: Add Kubernetes apt repository
      apt_repository:
        repo: deb https://apt.kubernetes.io/ kubernetes-xenial main
        state: present
        filename: kubernetes.list

    - name: Update APT package cache
      apt:
        update_cache: yes
    
    - name: Install Kubernetes binaries
      apt:
        name: "{{ packages }}"
        state: present
        update_cache: yes
        allow_change_held_packages: true
      vars:
        packages:
          # it is usually recommended to specify which version you want to install
          - kubelet=1.27.4-00
          - kubeadm=1.27.4-00
          - kubectl=1.27.4-00
    
    - name: hold kubernetes binary versions (prevent from being updated)
      dpkg_selections:
        name: "{{ item }}"
        selection: hold
      loop:
        - kubelet
        - kubeadm
        - kubectl
    
    - name: Restart kubelet
      service:
        name: kubelet
        daemon_reload: yes
        state: restarted

